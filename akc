int32_t LSM303C_Init(uint8_t accDataRate, uint8_t accFullScale) {
	uint8_t tmpReg = 0x00;
	int32_t status;

	//Read device ID and check if the device is correct
	if((status = HAL_I2C_Mem_Read(&hi2c3, ACC_LSM303C_I2C_ADDR << 1,
			LSM303C_WHO_AM_I_ADDR, 1, &tmpReg, 1, 1000)) != HAL_OK) {
		printf("Error: I2C3! - %\r\n", (unsigned int)status);
		Error_Handler();
	} else {
		if(tmpReg != LMS303C_ACC_ID) {
			printf("Error: LSM303C not found! (0x%02X)\r\n", tmpReg);
			Error_Handler();
		} else {
			printf("LSM303C found! (0x%02X)\r\n", tmpReg);
			//Enable all axes and set data rate
			tmpReg = (accDataRate | LSM303C_ACC_AXES_ENABLE);
			status |= HAL_I2C_Mem_Write(&hi2c3, ACC_LSM303C_I2C_ADDR << 1,
					LSM303C_CTRL_REG1_A, 1, &tmpReg, 1, 1000);
			// Set full scale
			tmpReg = accFullScale | 0x04;
			status |= HAL_I2C_Mem_Write(&hi2c3, ACC_LSM303C_I2C_ADDR << 1,
					LSM303C_CTRL_REG4_A, 1, &tmpReg, 1, 1000);
		}
	}
	return status;
}

void LSM303C_ReadAccRawData(ACC_RawData_st *accData) {
	int32_t status;

	if((status = HAL_I2C_Mem_Read(&hi2c3, ACC_LSM303C_I2C_ADDR << 1,
			LSM303C_OUT_X_L_A | 0x80, 1, (uint8_t *)accData, 6, 1000)) != HAL_OK) {
		printf("Error: I2C3! - %x\r\n", (unsigned int)status);
		Error_Handler();
	}
}
